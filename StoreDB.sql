-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS "Store_schem".products
(
    id_product integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    product_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    inbox character varying(100) COLLATE pg_catalog."default",
    date_beg date,
    date_end date,
    CONSTRAINT products_pkey PRIMARY KEY (id_product)
);

CREATE TABLE IF NOT EXISTS "Store_schem".stocks
(
    id_stock integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    id_product integer NOT NULL,
    balance numeric NOT NULL,
    CONSTRAINT stocks_pkey PRIMARY KEY (id_stock)
);

CREATE TABLE IF NOT EXISTS "Store_schem".store_balance
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    id_product integer NOT NULL,
    id_store integer NOT NULL,
    amount_product integer NOT NULL,
    price numeric NOT NULL,
    date_refresh date NOT NULL,
    CONSTRAINT store_balance_pkey PRIMARY KEY (id_product)
);

CREATE TABLE IF NOT EXISTS "Store_schem".store_sales
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    id_product integer NOT NULL,
    id_store integer NOT NULL,
    date_sale date NOT NULL,
    items integer NOT NULL DEFAULT 1,
    payment numeric NOT NULL,
    CONSTRAINT store_sales_pkey PRIMARY KEY (id_store)
);

CREATE TABLE IF NOT EXISTS "Store_schem".stores
(
    id_store integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    store_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    sore_adress character varying(150) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT store_pkey PRIMARY KEY (id_store)
);

ALTER TABLE IF EXISTS "Store_schem".stocks
    ADD CONSTRAINT fk_id_product_products FOREIGN KEY (id_product)
    REFERENCES "Store_schem".products (id_product) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "Store_schem".store_balance
    ADD CONSTRAINT fk_id_product_products FOREIGN KEY (id_product)
    REFERENCES "Store_schem".products (id_product) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS store_balance_pkey
    ON "Store_schem".store_balance(id_product);


ALTER TABLE IF EXISTS "Store_schem".store_balance
    ADD CONSTRAINT fk_id_store_stores FOREIGN KEY (id_store)
    REFERENCES "Store_schem".stores (id_store) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "Store_schem".store_sales
    ADD CONSTRAINT fk_id_product_products FOREIGN KEY (id_product)
    REFERENCES "Store_schem".products (id_product) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "Store_schem".store_sales
    ADD CONSTRAINT fk_id_store_stores FOREIGN KEY (id_store)
    REFERENCES "Store_schem".stores (id_store) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS store_sales_pkey
    ON "Store_schem".store_sales(id_store);

END;